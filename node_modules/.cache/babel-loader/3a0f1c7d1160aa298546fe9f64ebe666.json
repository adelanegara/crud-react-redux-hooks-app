{"ast":null,"code":"var _jsxFileName = \"/Users/adelanegaraputri/crud-react-redux-hooks-app/src/components/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Avatar, Button, CssBaseline, TextField, Link, Paper, Box, Grid, Typography, createTheme, ThemeProvider } from \"@mui/material\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { toast } from \"react-toastify\"; // const Login = ({ account, onLogin, setUserData }) => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    account,\n    onLogin,\n    setUserData\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const theme = createTheme();\n  const navigate = useNavigate();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const checkAccount = account.find(item => {\n      return item.email === email && item.password === password;\n    });\n\n    if (checkAccount) {\n      setUserData(checkAccount);\n      onLogin();\n      toast.success(\"Login Succesfully\");\n      navigate(\"/\");\n    } else {\n      toast.error(\"Invalid username or password\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      sx: {\n        height: \"100vh\"\n      },\n      \"data-testid\": \"login\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: false,\n        sm: 4,\n        md: 7,\n        sx: {\n          backgroundImage: \"url(https://source.unsplash.com/random)\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: t => t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 5,\n        component: Paper,\n        elevation: 6,\n        square: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: \"secondary.main\"\n            },\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            onSubmit: handleSubmit,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"#\",\n                  variant: \"body2\",\n                  children: \"Forgot password?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"#\",\n                  variant: \"body2\",\n                  children: \"Don't have an account? Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nconst mapStateToProps = state => ({\n  account: state.account\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setUserData: data => {\n    dispatch({\n      type: \"SET_USER_DATA\",\n      payload: data\n    });\n  },\n  onLogin: () => {\n    dispatch({\n      type: \"LOGIN\"\n    });\n  }\n});\n\nexport { Login as LoginUnwrapped };\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","connect","Avatar","Button","CssBaseline","TextField","Link","Paper","Box","Grid","Typography","createTheme","ThemeProvider","LockOutlinedIcon","toast","Login","account","onLogin","setUserData","email","setEmail","password","setPassword","theme","navigate","handleSubmit","event","preventDefault","checkAccount","find","item","success","error","height","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","my","mx","display","flexDirection","alignItems","m","bgcolor","mt","e","target","value","mb","mapStateToProps","state","mapDispatchToProps","dispatch","data","type","payload","LoginUnwrapped"],"sources":["/Users/adelanegaraputri/crud-react-redux-hooks-app/src/components/Login/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Link,\n  Paper,\n  Box,\n  Grid,\n  Typography,\n  createTheme,\n  ThemeProvider,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { toast } from \"react-toastify\";\n\n// const Login = ({ account, onLogin, setUserData }) => {\nconst Login = ({ account, onLogin, setUserData }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const theme = createTheme();\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const checkAccount = account.find((item) => {\n      return item.email === email && item.password === password;\n    });\n    if (checkAccount) {\n      setUserData(checkAccount);\n      onLogin();\n      toast.success(\"Login Succesfully\");\n      navigate(\"/\");\n    } else {\n      toast.error(\"Invalid username or password\");\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid\n        container\n        component=\"main\"\n        sx={{ height: \"100vh\" }}\n        data-testid=\"login\"\n      >\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: \"url(https://source.unsplash.com/random)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: (t) =>\n              t.palette.mode === \"light\"\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  account: state.account,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUserData: (data) => {\n    dispatch({ type: \"SET_USER_DATA\", payload: data });\n  },\n  onLogin: () => {\n    dispatch({ type: \"LOGIN\" });\n  },\n});\n\nexport { Login as LoginUnwrapped };\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}